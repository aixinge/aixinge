basePath: /
definitions:
  common.Attachment:
    properties:
      fileId:
        description: 文件 ID
        type: string
      fileName:
        description: 文件名称
        type: string
    type: object
  message.Application:
    properties:
      appKey:
        description: 应用 ID
        type: string
      appSecret:
        description: 应用密钥
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: string
      name:
        description: 应用名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态，1、正常 2、禁用
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  message.Channel:
    properties:
      config:
        $ref: '#/definitions/message.ChannelConfig'
        description: 消息渠道配置（JSON）
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: string
      name:
        description: 消息渠道名称
        type: string
      provider:
        description: 消息服务提供商
        type: integer
      remark:
        description: 备注
        type: string
      status:
        description: 状态 1、正常 2、禁用
        type: integer
      type:
        description: 消息类型(枚举)
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      weight:
        description: 权重
        type: integer
    type: object
  message.ChannelConfig:
    additionalProperties: true
    type: object
  message.ChannelTemplate:
    properties:
      channelId:
        description: 渠道ID
        type: string
      default:
        description: 默认渠道 1、是 2、否
        type: integer
      templateId:
        description: 模板ID
        type: string
      type:
        description: 消息类型(枚举)
        type: integer
    type: object
  message.MailTemplate:
    properties:
      appId:
        description: 应用 ID
        type: string
      attachments:
        description: 附件JSON
        items:
          $ref: '#/definitions/common.Attachment'
        type: array
      content:
        description: 模板内容
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: string
      name:
        description: 模板名称
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态 1、正常 2、禁用
        type: integer
      type:
        description: 模板类型（1-文本、2-HTML）
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  request.ChangePasswordStruct:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: string
    type: object
  request.IdsReq:
    properties:
      ids:
        description: ID数组
        items:
          type: string
        type: array
    type: object
  request.Login:
    properties:
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.MenuParams:
    properties:
      name:
        description: 菜单名称
        type: string
    type: object
  request.PageInfo:
    properties:
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.RefreshToken:
    properties:
      refreshToken:
        description: 刷新票据
        type: string
    type: object
  request.RoleMenuParams:
    properties:
      id:
        description: 角色ID
        type: string
      menuIds:
        description: 菜单ID集合
        items:
          type: string
        type: array
    type: object
  request.RoleUserParams:
    properties:
      id:
        description: 角色ID
        type: string
      userIds:
        description: 用户ID集合
        items:
          type: string
        type: array
    type: object
  request.UserCreate:
    properties:
      nickName:
        description: 用户昵称
        type: string
      password:
        description: 用户登录密码
        type: string
      userName:
        description: 用户登录名
        type: string
    type: object
  request.UserRoleParams:
    properties:
      id:
        description: 用户ID
        type: string
      roleIds:
        description: 角色ID集合
        items:
          type: string
        type: array
    type: object
  system.Menu:
    properties:
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      hidden:
        description: 是否在列表隐藏 1，是 2，否
        type: integer
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: string
      isFrame:
        description: Frame 1，是 2，否
        type: integer
      name:
        description: 路由name
        type: string
      noCache:
        description: 不缓存 1，是 2，否
        type: integer
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      redirect:
        description: 重定向的路由path
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序标记
        type: integer
      status:
        description: 状态，1、正常 2、禁用
        type: integer
      title:
        description: 菜单名
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.Role:
    properties:
      alias:
        description: 别名
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: string
      name:
        description: 名称
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态，1、正常 2、禁用
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.User:
    properties:
      avatar:
        description: 用户头像
        type: string
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: string
      nickName:
        description: 用户昵称
        type: string
      status:
        description: 状态，1、正常 2、禁用
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
info:
  contact: {}
  description: artificial intelligence message push service
  title: AiXinGe API
  version: 1.0.0
paths:
  /v1/app/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建应用
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.Application'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"应用创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建应用
      tags:
      - Application
  /v1/app/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除应用
      tags:
      - Application
  /v1/app/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: 应用ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取应用
      tags:
      - Application
  /v1/app/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 应用信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.Application'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新应用信息
      tags:
      - Application
  /v1/channel-template/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建渠道模板
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.ChannelTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"渠道模板创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建渠道模板
      tags:
      - ChannelTemplate
  /v1/channel-template/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除渠道模板
      tags:
      - ChannelTemplate
  /v1/channel/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建消息渠道
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"消息渠道创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建消息渠道
      tags:
      - Channel
  /v1/channel/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除消息渠道
      tags:
      - Channel
  /v1/channel/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: 消息渠道ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取消息渠道
      tags:
      - Channel
  /v1/channel/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取消息渠道
      tags:
      - Channel
  /v1/channel/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 消息渠道
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.Channel'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新消息渠道
      tags:
      - Channel
  /v1/file/download:
    get:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: 主键
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: ""
      security:
      - ApiKeyAuth: []
      summary: 文件下载
      tags:
      - File
  /v1/file/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 文件上传
      tags:
      - File
  /v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /v1/mail-log/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除邮件日志
      tags:
      - MailLog
  /v1/mail-log/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取邮件日志
      tags:
      - MailLog
  /v1/mail-template/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建邮件模板
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.MailTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"邮件模板创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建邮件模板
      tags:
      - MailTemplate
  /v1/mail-template/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除邮件模板
      tags:
      - MailTemplate
  /v1/mail-template/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: 邮件模板ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取邮件模板
      tags:
      - MailTemplate
  /v1/mail-template/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取邮件模板
      tags:
      - MailTemplate
  /v1/mail-template/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 邮件模板
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/message.MailTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新邮件模板
      tags:
      - MailTemplate
  /v1/menu/auth:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取当前登录用户授权菜单
      tags:
      - Menu
  /v1/menu/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建菜单
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建菜单
      tags:
      - Menu
  /v1/menu/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /v1/menu/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /v1/menu/list:
    post:
      consumes:
      - application/json
      parameters:
      - description: 查询参数
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.MenuParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取菜单列表
      tags:
      - Menu
  /v1/menu/list-tree:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取菜单列表树
      tags:
      - Menu
  /v1/menu/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取菜单列表
      tags:
      - Menu
  /v1/menu/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新菜单信息
      tags:
      - Menu
  /v1/refresh-token:
    post:
      consumes:
      - application/json
      parameters:
      - description: 刷新票据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"刷新Token成功"}'
          schema:
            type: string
      summary: 刷新Token
      tags:
      - Base
  /v1/role/assign-menu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID、菜单ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleMenuParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 角色分配菜单
      tags:
      - Role
  /v1/role/assign-user:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID、用户ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 角色分配用户
      tags:
      - Role
  /v1/role/batch-get:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 批量根据id获取角色
      tags:
      - Role
  /v1/role/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.Role'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - Role
  /v1/role/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - Role
  /v1/role/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取角色
      tags:
      - Role
  /v1/role/list:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取角色列表
      tags:
      - Role
  /v1/role/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - Role
  /v1/role/selected-menus:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取角色已分配的菜单详细信息列表
      tags:
      - Role
  /v1/role/selected-users:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取角色已分配的用户ID列表
      tags:
      - Role
  /v1/role/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.Role'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - Role
  /v1/user/assign-role:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户ID、角色ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserRoleParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户分配角色
      tags:
      - User
  /v1/user/change-password:
    post:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - User
  /v1/user/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - User
  /v1/user/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID集合
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IdsReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - User
  /v1/user/get:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取用户
      tags:
      - User
  /v1/user/list:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - User
  /v1/user/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - User
  /v1/user/selected-roles:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取用户已分配的角色ID列表
      tags:
      - User
  /v1/user/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.User'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
